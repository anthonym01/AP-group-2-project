status = warn
name= properties_configuration


# Give directory path where log files should get stored
property.basePath = ./log


# ConsoleAppender will print logs on console
appender.console.type = Console
appender.console.name = consoleLogger
appender.console.target = SYSTEM_OUT
appender.console.layout.type = PatternLayout


# Specify the pattern of the logs
appender.console.layout.pattern = %n[%-5level] [%d{dd-MMMM-yyyy h:mm:ss.SSS a | z}] [%t] [%l] - %msg%n

# Date formatting source at: https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html

# RollingFileAppender will print logs in file which can be rotated based on time or size
appender.rolling.type = RollingFile
appender.rolling.name = fileLogger
appender.rolling.fileName= ${basePath}/app.log
appender.rolling.filePattern = ${basePath}/$${date:yyyy-MM}/app-%d{MM-dd-yyyy}-%i.log.gz
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = [%-5level] [%d{dd-MMMM-yyyy h:mm:ss.SSS a | z}] [%t] [%l] - %msg%n
appender.rolling.policies.type = Policies


# Rotate log file each day and keep 30 days worth
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 1
appender.rolling.policies.time.modulate = true

appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size = 5MB

appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.delete.type = Delete
appender.rolling.strategy.delete.basePath = ${basePath}
appender.rolling.strategy.delete.maxDepth = 1
appender.rolling.strategy.delete.ifLastModified.type = IfLastModified

# Delete files older than 30 days
appender.rolling.strategy.delete.ifLastModified.age = 30d

# Applying filtering to state what type should be logged to the file...
appender.rolling.filter.threshold.type = ThresholdFilter
appender.rolling.filter.threshold.level = info


# Mention package name here in place of example. Classes in this package or subpackages will use ConsoleAppender and RollingFileAppender for logging         
logger.logging.name = logging
logger.logging.level = debug
logger.logging.additivity = false
logger.logging.appenderRef.rolling.ref = fileLogger
logger.logging.appenderRef.console.ref = consoleLogger


# Configure root logger for logging error logs in classes which are in package other than above specified package
rootLogger.level = info
rootLogger.additivity = false
rootLogger.appenderRef.rolling.ref = fileLogger
rootLogger.appenderRef.console.ref = consoleLogger

